env:
  # Only build on Python 3 and skip 32-bit builds
  CIBW_BUILD: "cp37-* cp38-*"
  CIBW_SKIP: "cp27-* *-win32 *-manylinux_i686"

name: Build

on: [push, pull_request]

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-18.04, windows-latest, macos-latest]
        python_version: ['3.7']

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        name: Install Python ${{ matrix.python_version }}
        with:
          python-version: ${{ matrix.python_version }}

      - name: Install cibuildwheel
        run: |
          python -m pip install cibuildwheel==1.4.2

      - name: Build wheels
        run: |
          python -m cibuildwheel --output-dir wheelhouse

      - uses: actions/upload-artifact@v2
        with:
          path: ./wheelhouse/*.whl

build_sdist:
  name: Build source distribution
  runs-on: ubuntu-latest
  steps:
    - uses: actions/checkout@v2

    - uses: actions/setup-python@v2
      name: Install Python
      with:
        python-version: '3.7'

    - name: Build sdist
      run: python setup.py sdist

    - uses: actions/upload-artifact@v2
      with:
        path: dist/*.tar.gz

upload_pypi:
  needs: [build_wheels, build_sdist]
  runs-on: ubuntu-latest
  # upload to PyPI on every tag starting with 'v'
  if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/v')
  # alternatively, to publish when a GitHub Release is created, use the following rule:
  # if: github.event_name == 'release' && github.event.action == 'published'
  steps:
    - uses: actions/download-artifact@v2
      with:
        name: artifact
        path: dist

    - uses: pypa/gh-action-pypi-publish@master
      with:
        user: __token__
        password: ${{ secrets.pypi_password }}
        # To test: repository_url: https://test.pypi.org/legacy/


